"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isSymbol = isSymbol;
const validSymbolTypes = new Set([
    "SYMBOL" /* RawRType.Symbol */,
    "SYMBOL_PACKAGE" /* RawRType.SymbolPackage */,
    "SYMBOL_FUNCTION_CALL" /* RawRType.SymbolFunctionCall */,
    "NULL_CONST" /* RawRType.NullConst */,
    "STR_CONST" /* RawRType.StringConst */,
    "(" /* RawRType.ParenLeft */,
    ")" /* RawRType.ParenRight */,
    "{" /* RawRType.BraceLeft */,
    "}" /* RawRType.BraceRight */,
    "SLOT" /* RawRType.Slot */,
]);
/**
 * Validates, whether the given type can be used as a symbol in R
 *
 * @see RawRType
 */
function isSymbol(type) {
    return validSymbolTypes.has(type);
}
//# sourceMappingURL=type.js.map