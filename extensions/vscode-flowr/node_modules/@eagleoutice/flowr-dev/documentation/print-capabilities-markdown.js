"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const data_1 = require("../r-bridge/data/data");
const version_1 = require("../util/version");
const log_1 = require("../../test/functionality/_helper/log");
const supportedSymbolMap = new Map([
    ['not', ':red_circle:'],
    ['partially', ':large_orange_diamond:'],
    ['fully', ':green_square:']
]);
function printSingleCapability(depth, index, capability) {
    const indent = '    '.repeat(depth);
    const indexStr = index.toString().padStart(2, ' ');
    const nextLineIndent = '  '.repeat(depth + indexStr.length);
    const mainLine = `${indent}${indexStr}. **${capability.name}** (<a id='${capability.id}'>\`${capability.id}\`</a>)`;
    let nextLine = '';
    if (capability.supported) {
        nextLine += `${supportedSymbolMap.get(capability.supported)} `;
    }
    if (capability.description) {
        nextLine += capability.description;
    }
    if (capability.note) {
        nextLine += `\\\n${nextLineIndent}_${capability.note}_`;
    }
    return nextLine ? `${mainLine}\\\n${nextLineIndent}${nextLine}` : mainLine;
}
function printAsMarkdown(capabilities, depth = 0, lines = []) {
    for (let i = 0; i < capabilities.length; i++) {
        const capability = capabilities[i];
        const result = printSingleCapability(depth, i + 1, capability);
        lines.push(result);
        if (capability.capabilities) {
            printAsMarkdown(capability.capabilities, depth + 1, lines);
        }
    }
    return lines.join('\n');
}
function getPreamble() {
    const currentDateAndTime = new Date().toISOString().replace('T', ', ').replace(/\.\d+Z$/, ' UTC');
    return `_This document was generated automatically from '${module.filename}' on ${currentDateAndTime} summarizig flowR's current capabilities (version: ${(0, version_1.flowrVersion)().format()})._

The code-font behind each capability name is a link to the capability's id. This id can be used to reference the capability in a labeled test within flowR.
Besides, we use colored bullets like this:

| <!-- -->               | <!-- -->                                              |
| ---------------------- | ----------------------------------------------------- |
| :green_square:         | _flowR_ is capable of handling this feature fully     |
| :large_orange_diamond: | _flowR_ is capable of handling this feature partially |
| :red_circle:           | _flowR_ is not capable of handling this feature       |

:cloud: This could be a feature diagram... :cloud:

`;
}
/** if we run this script, we want a Markdown representation of the capabilities */
if (require.main === module) {
    (0, log_1.setMinLevelOfAllLogs)(6 /* LogLevel.Fatal */);
    console.log(getPreamble() + printAsMarkdown(data_1.flowrCapabilities.capabilities));
}
//# sourceMappingURL=print-capabilities-markdown.js.map